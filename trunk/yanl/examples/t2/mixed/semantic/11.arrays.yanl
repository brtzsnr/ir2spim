program test11;	# more array expression checking, this time with boundaries
type foo = object(bar)
	a: array[1..10] of array[1..5] of integer;
	procedure test
	begin
		i := a[1][2];	# line 6
		i := x[1];
		i := y[1];
		i := a[1][2][3];	# line 9 - error - STDIN(9, 7): type mismatch error; got INTEGER while expecting ARRAY
		i := y[1][2];	# line 10 - error - STDIN(10, 7): type mismatch error; got INTEGER while expecting ARRAY
		i := x[1][2];	# line 11 - error - STDIN(11, 7): type mismatch error; got INTEGER while expecting ARRAY
	end;
end;
type bar = object
	x: array[1..10] of integer;
end;
var i: integer;
	y: array[1..10] of integer;
begin end.
