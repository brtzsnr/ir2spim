.code
PrintInteger:
	# afiseaza intregul din registru VI0 urmat de linie noua
	VR0 <- call OutInt
	loadl VR0 space
	VI0 <- VR0
	VR0 <- call OutString
	return 0

Func:
	VR20 <- VI0
	VR21 <- VI1

	VR20 <- VR20 + 1
	VI0 <- VR20
	VR10 <- call PrintInteger
	VR21 <- VR21 + 1
	VI0 <- VR21
	VR10 <- call PrintInteger

	# propagate 20
	VR3 <- VR20
	VR1 <- 5 + VR20
	VI0 <- VR1
	VR10 <- call PrintInteger
	VR0 <- VR20
	VR4 <- VR20
	VR6 <- VR20 + VR20
	VI0 <- VR6
	VR10 <- call PrintInteger
	VR1 <- 7 + VR20
	VI0 <- VR1
	VR10 <- call PrintInteger
	VR6 <- 6 + VR20
	VI0 <- VR6
	VR10 <- call PrintInteger
	VR6 <- VR20 + 3
	VI0 <- VR6
	VR10 <- call PrintInteger
	VR8 <- VR20 + 8
	VI0 <- VR8
	VR10 <- call PrintInteger
	VR7 <- VR20
	VR2 <- VR20
	VR1 <- VR20 + 3
	VI0 <- VR1
	VR10 <- call PrintInteger
	VR1 <- 3 + VR20
	VI0 <- VR1
	VR10 <- call PrintInteger
	VR1 <- VR20
	VR8 <- 8 + VR20
	VI0 <- VR8
	VR10 <- call PrintInteger
	VR9 <- 3 + VR20
	VI0 <- VR9
	VR10 <- call PrintInteger
	VR8 <- 2 + VR20
	VI0 <- VR8
	VR10 <- call PrintInteger
	VR8 <- VR20
	VR5 <- VR20
	VR9 <- VR20
	VR6 <- VR20

	VR20 <- VR20 + 1
	VI0 <- VR20
	VR10 <- call PrintInteger

	VR10 <- VR20
	__loop_20:
		VR0 <- VR0 + 0
		VR0 <- VR0 + VR20
		VR1 <- VR1 + 1
		VR1 <- VR1 + VR20
		VR2 <- VR2 + 2
		VR2 <- VR2 + VR20
		VR3 <- VR3 + 3
		VR3 <- VR3 + VR20
		VR4 <- VR4 + 4
		VR4 <- VR4 + VR20
		VR5 <- VR5 + 5
		VR5 <- VR5 + VR20
		VR6 <- VR6 + 6
		VR6 <- VR6 + VR20
		VR7 <- VR7 + 7
		VR7 <- VR7 + VR20
		VR8 <- VR8 + 8
		VR8 <- VR8 + VR20
		VR9 <- VR9 + 9
		VR9 <- VR9 + VR20
	VR10 <- VR10 - 1
	jumpt VR10 __loop_20


	# Using all registers
	VI0 <- VR0
	VI1 <- VR1
	VI2 <- VR2
	VI3 <- VR3
	VI4 <- VR4
	VI5 <- VR5
	VI6 <- VR6
	VI7 <- VR7
	VI8 <- VR8
	VI9 <- VR9
	VR10 <- call PrintInteger
	# propagate 21
	VR5 <- VR21
	VR7 <- 8 + VR21
	VI0 <- VR7
	VR10 <- call PrintInteger
	VR9 <- VR21 + VR21
	VI0 <- VR9
	VR10 <- call PrintInteger
	VR4 <- VR21 + 7
	VI0 <- VR4
	VR10 <- call PrintInteger
	VR2 <- 1 + VR21
	VI0 <- VR2
	VR10 <- call PrintInteger
	VR6 <- VR21
	VR0 <- VR21 + 5
	VI0 <- VR0
	VR10 <- call PrintInteger
	VR7 <- VR21 + 2
	VI0 <- VR7
	VR10 <- call PrintInteger
	VR4 <- VR21 + VR21
	VI0 <- VR4
	VR10 <- call PrintInteger
	VR8 <- VR21 + 6
	VI0 <- VR8
	VR10 <- call PrintInteger
	VR8 <- VR21
	VR2 <- 1 + VR21
	VI0 <- VR2
	VR10 <- call PrintInteger
	VR7 <- VR21
	VR9 <- VR21 + 8
	VI0 <- VR9
	VR10 <- call PrintInteger
	VR4 <- VR21
	VR0 <- VR21 + VR21
	VI0 <- VR0
	VR10 <- call PrintInteger
	VR0 <- 1 + VR21
	VI0 <- VR0
	VR10 <- call PrintInteger
	VR0 <- VR21
	VR9 <- VR21 + VR21
	VI0 <- VR9
	VR10 <- call PrintInteger
	VR9 <- VR21
	VR3 <- VR21
	VR1 <- VR21
	VR2 <- VR21 + 3
	VI0 <- VR2
	VR10 <- call PrintInteger
	VR2 <- 2 + VR21
	VI0 <- VR2
	VR10 <- call PrintInteger
	VR2 <- VR21

	VR21 <- VR21 + 1
	VI0 <- VR21
	VR10 <- call PrintInteger

	VR10 <- VR21
	__loop_21:
		VR0 <- VR0 + 0
		VR0 <- VR0 + VR21
		VR1 <- VR1 + 1
		VR1 <- VR1 + VR21
		VR2 <- VR2 + 2
		VR2 <- VR2 + VR21
		VR3 <- VR3 + 3
		VR3 <- VR3 + VR21
		VR4 <- VR4 + 4
		VR4 <- VR4 + VR21
		VR5 <- VR5 + 5
		VR5 <- VR5 + VR21
		VR6 <- VR6 + 6
		VR6 <- VR6 + VR21
		VR7 <- VR7 + 7
		VR7 <- VR7 + VR21
		VR8 <- VR8 + 8
		VR8 <- VR8 + VR21
		VR9 <- VR9 + 9
		VR9 <- VR9 + VR21
	VR10 <- VR10 - 1
	jumpt VR10 __loop_21


	# Using all registers
	VI0 <- VR0
	VI1 <- VR1
	VI2 <- VR2
	VI3 <- VR3
	VI4 <- VR4
	VI5 <- VR5
	VI6 <- VR6
	VI7 <- VR7
	VI8 <- VR8
	VI9 <- VR9
	VR10 <- call PrintInteger
	return 0

Main:
	VR10 <- 9
	VI0 <- VR10
	VR10 <- 10
	VI1 <- VR10
	VR10 <- call Func
	loadl VR10 new_line
	VI0 <- VR10
	VR10 <- call OutString

	VR10 <- 7
	VI0 <- VR10
	VR10 <- 38
	VI1 <- VR10
	VR10 <- call Func
	loadl VR10 new_line
	VI0 <- VR10
	VR10 <- call OutString

	VR10 <- 42
	VI0 <- VR10
	VR10 <- 54
	VI1 <- VR10
	VR10 <- call Func
	loadl VR10 new_line
	VI0 <- VR10
	VR10 <- call OutString

	VR10 <- 49
	VI0 <- VR10
	VR10 <- 70
	VI1 <- VR10
	VR10 <- call Func
	loadl VR10 new_line
	VI0 <- VR10
	VR10 <- call OutString

	return 0

.data
	new_line: DS "\n\0"
	space: DS " \0"
