##################################
# Unlimited Average
#
# Another type is a 1-dimensional array of numbers. The size of the array is a positive integer constant.
# Arrays are local variables, too, and are declared in a similar way.
# An array element can be used in any place where a local variable can be used. The first element has index 0.
# If an array is an argument to a function, it is passed by reference, not by value
# A function can have multiple parameters of various types, but it cannot return an array.
#
# Control flow structures include "if", "while", and "until" - the last one loops as long as the expression is false
# The control flow statements have a conditional expression parameter. Conditions are comparisons between integer expressions.
# Allowed operators are < , = , >
#
# "if", "while", "until" are keywords

# Average array values
average number[256] data, number count -> number:
	local number i; number sum; end;
	i = 0;
	sum = 0;
	while i < count;
		sum = sum + data[i];
		i = i + 1;
	end;
	return sum / count;
end;

# Read an array, return the size of the data read

readArray number[256] data -> number:
	local number c; number i; end;
	[print "Count? "];
	c = [read];
	if c > 0;
		if c > 256;
			[ print "ERROR: Buffer overflow!\n"];
			return 0;
		else
			i = c;
			until i = 0;
				[print ">"];
				data[c - i] = [ read ];
				i = i - 1;
			end;
		end;
		
		return c;
	end;
	
	if c = 0;
		# do nothing
	else
		[ print "ERROR: Count is negative!\n"];
	end;
	return 0;
end;

start:
	local number c; number[256] d; end;
	c = [readArray d];
	if c > 0;
		[print "Average value: "];
		[write [average d,c]];
		[print "\n"];
	end;
end;
